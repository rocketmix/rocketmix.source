logging.level.root=error
logging.level.org.springframework.security=debug
logging.level.org.springframework.web=debug
logging.level.org.springframework.web.servlet.handler=off
logging.level.org.springframework.boot.context.config=debug
logging.level.com.netflix.discovery=off

# Send data to admin server
spring.boot.admin.client.url=${management.server.uri:http://127.0.0.1:8761}/admin/

# Allow actuator to expose statistics
management.endpoints.web.exposure.include=*
management.endpoints.web.cors.allowed-origins=*
management.endpoints.jmx.exposure.include=*

# Register microservices to eureka main directory
eureka.client.enabled=true
eureka.client.service-url.defaultZone=${management.server.uri:http://127.0.0.1:8761}/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.metadata-map.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}  

# Autoscan java annotation to detect JAX-RS annotated service to expose as @GET or @POST
cxf.jaxrs.component-scan=true

# Hystrix wraps calls to microservices to detect failure and redirect response to a common fallback response
# Circuit Breaker helps Hystrix by redirecting response automatically to fallback response if defined thresholds are reached 
# Parameters set according to : https://github.com/Netflix/Hystrix/wiki/Configuration
hystrix.command.default.execution.isolation.strategy=THREAD 
hystrix.command.default.execution.execution.timeout.enabled=false
hystrix.command.default.fallback.enabled=false
hystrix.command.default.circuitBreaker.enabled=false 
hystrix.command.default.metrics.rollingStats.timeInMilliseconds: 600000
hystrix.command.default.metrics.rollingStats.numBuckets=600