language: java

# GPG details needed to send signed artifact to Maven central repository
# Local command to run :
# 1) Generate a signing key with : gpg --gen-key
# 2) See your key with : gpg2 --list-keys
# 3) Reference it on public servers with : gpg2 --keyserver hkp://pool.sks-keyservers.net --send-keys C6EED57A
# 4) Obtain local key and expose it as Travis-CI env variable GPG_SECRET_KEYS with : gpg -a --export-secret-keys <your-email-address> | base64 -w 0
# 5) Obtain local owner key and expose it as Travis-CI env variable GPG_OWNERTRUST with : gpg --export-ownertrust | base64 -w 0
# Current are (valid until 2021-02-18) :
# User : Alexandre de Pellegrin / Mail : alexdp@free.fr / Passphrase : rocketmix
# GPG_SECRET_KEYS=LS0tLS1CRUdJTiBQR1AgUFJJVkFURSBLRVkgQkxPQ0stLS0tLQoKbFFXR0JGeHNoZDhCREFERGlvOE1PRzhucERsUVpudW5kdi90akZlampUNXJGOHYwdjc5aFY3cG01d1NQNW90ZwpLQWNMZ3JyK1hpeGZ3SWM1V29SaEptUjBtRXo2YUNEbCtROTMwYTB2V0hiK0pCMFZ1dyt6U1hSdVhKemFXZW00CkoxSFlkRjhzMUsvY1pPV2UwWU1SOHJ2Zk5FWTRpbUsvTVk5YUc3eEZCNktUbXhHd2k3UFk3NUdTaXBRMWpwTVUKQWw1UzZmMGJwRjdDL1grNFhCYmlJd3VlUnNtVWt0dVo5L28xc2toNHlHR05ESVhjTEwyaDdoTmsvcjhZOE9nbgpPMGQvS0s1dS9zVXMxams0MnAzQktWREtsOS8yZUMvMXN5T0VTcVIxWWg2dDhnY3FEVkhUUnp4V1JaTU54R3BqCi8zcE9VaWRRYnRTL3BKeXc0ZGg3TXd6QU1zSHNPWEhKa3ZGUTBzM3BMRVZjdzBNSmtJeXA5NjBXQ04vMFUyREgKczlZenYrT1pqcE9TdXVwWEViVTBpQTU1UjhDRndLcyt0RlduVm1XVHh3RXhYdE9IWnI5RDAyUHFNa2RlMG82NgpPSXZtbHRQUUU3dTEzSTB3TWdRZCs4TmZNNk5BTUdvRVZiSWlSRU1aK0tyZldkNWlDOWYzd3lTSDJFSUJ5V3RsCmgzelNXV3pzN1NYa0xFc0FFUUVBQWY0SEF3SmhkT0JPY3ltOSsvODdpV1IxUVlxS0NhZXpiMjhhcks5RUlhNXMKbjErblI2ck1qYXRSb2JDK2VjdG5ET1dZMWcwdFFyVjRlSnZjc1BCa0dUd1d0Y3EyYmVqeXhWY0VjTTFZSDNGWQpNTm9UVzVRN0tjR0lzTldHQmxUYTdQTXNrQzlvc0poaWY1MUtBcnp0OHdXZi9JS1MvZXl6UzV4OWxqeUNsb1BNCkdMQ0pJMUVzWUxzWWthUWtLRUxiNUQyYW82K1U1VlMvM0duZm95elFiMzNramJPbXBvam5XTHpGVDJBS2ZVRzQKdUFsd2tRY2xJdUlIbEZWVElwZ05vTElHQVFLR0M0TXVjRkxZUHkrSm56b1BuQ3NMbklnYnBSNlNxQjRGT1VwVgpud3dReUJhTlhnbGhkWklqbXVJeVJNcmZXMjZ6c0FZY1NHdjNkL2ZnVGJSNTVQZFN5c2thZG5XbnhxM0pCa0VOCjIvcjBsSEZuakdQVzd1emFmdDZ3MnpzaGF5bmNvTWk1N1R5OWZIRUNLbXdBdVltak1yMVBYcjlaaDFtZWNvMTMKcG1mMXErUWNKSlZxbWMwR0RoYVllUlhML00wV3JwRmtRc0xZaWZsVCtEY2hKc05reU9pNkZKYjk2emRWMmlRSgpYTTlLcC9JVWo5Tk03SXBDMkFlWmtSN2hMeFJ6bDA1UFdYTVZiV3RTcms0NE5KV1lYYlVJSDEvM05BMTJyVU9PCmdOZlFRbzJoOUU3Z1FqWEVyQVViWHM1YUVUQ0FkOUFmWDdleDR2MFZTVUtpbGk4RkIvNFFEdGZ1K2hlZnFpdVcKNlN2Njhlb1AxV1FtSTVZS0c2N0xUVkc3N2llbmVSS3h6VWN3bU1RQkg2dnZQeUdwZno2aHZkdmxTb3EvejVvdgpCWVQ0QW9HQUd5N21keDVqNnFhOTdhTXMwbDRCZjRuNTZScDRGbURoOTdmZ2lWdElWQ0JLeUFZYTVDamk3Qnp1CmFiMDNnVXMwZnNva2tyeGNHZXBzRTFaR0JOZmQ5KzlCank5c1BSTzllT1VXN0xvMDRNUi9EZFZ1eHVsVUxXSE4KM3ZyYzZvUndwNmRTdFNUeUVHUG9XYjd3QnNZSDNMWHBVTnZYYTRUZ2YvQWFLMUt4dVZ6SkpRSVJhNG9YcFJYRApETEI2Z292ZHY3TlQ2TzlMcXNuQ3RCUXBMaWZuZ2lWeGRTQnhxQlcvdjlGWXkrRDJtTEZNUzJCU29YQUN2VXg3CkJPMGJHRWpRSGdSRUo0UUFXMWlaamJGWGtpWkpTY1crT1BqNGR6aTNYdUVNRXlNRk1sRUg2ZFdJQzRmeER5NnUKelA2YkJlaEluNEJ0d0xhUHJtdVFhWmt3Kzdybk9RdnAwSUVsNXZVWUUzL0Zuem13dDFiY2pUV2lNZnhISGl0TApRZjVIS3h4MGhtTU5FeGM4aEp3eWFDTnhzNTNTbkVSdS9aNmNsYVBnUjBBMFNuOU1GWWRuK29HdW9mc3A0bEVxCjByYlhnclN2VmdJUVkyL2crRFV0Q1RBeno1dm96NXRUWnhVM1FQYXNPdnRTNlovUFJwZFRtQkwzUTNnYkxqaEwKYXBPeFViQkhSVjVOd2JQWWtmTWQyaE83Uk5BTVMwODV0MjF6djBmTXVqSm1pVlovTlVCbzZhTUV3ZmkxY2U5eQpYb0R4dFBMY2FpYUpVSTl3Y05iem5QdkNXQzRmbDMvS0JETVQxSUo2ZDk3ckVwSStreWEzbmlTY0d6OXNrRXpnCnc5Q05PVXdBSlMyZW5mQzZFQldqRWRWc1VSTXJURS90TTdRblFXeGxlR0Z1WkhKbElHUmxJRkJsYkd4bFozSnAKYmlBOFlXeGxlR1J3UUdaeVpXVXVabkkraVFIVUJCTUJDZ0ErRmlFRVRuQzdzU0laRUpNZ2dzcnl1R2Frd1djTwpHWGNGQWx4c2hkOENHd01GQ1FQQ1p3QUZDd2tJQndJR0ZRb0pDQXNDQkJZQ0F3RUNIZ0VDRjRBQUNna1F1R2FrCndXY09HWGVqT2d2NkFqTWpFVld2eUtjQTZ4UTFYN2VGRU1GK3EzOElPZ2w5b2hSa0EydU5aY0pHeDI1dkQ1Q0YKVHpmSmtZTHJxNEpnU0lEZHVqaGk0c0tSRzZ5QXhrS1FGeWN3UHlrUGcveU5tdG9MMWtYckFhZ1VGQjJpZjAvQQoydVIwYVNsZ25qUWJrcTI0c1czQjFwUUs2VDF0a01DTlJQWUlRTTZGekcyTEZCdnk5SCtiWGFZeWh5a3JlNnB3Ckt0d0lCcHlwNi96LzNCZFovYU14ZnY4WFNta2VOS1ltNm8yRjA4MVJLS2MyTDUxRys5c0FsbG0wM3lrYnpsZEYKVzZ2ZU1rUnM1ZHJUUUx1aDNRcVV5VmpLTlNqb1ZQNzVUNjJDRVhpQWZYV3htaTM5RWsxZlcva094bm8vZnZ3MgpzaThKNVNzWlpsdUo1UUsyY2MvRVlZRVhoWWo1RmsvVE1XYVBxaThDS0hkOXYzN1Yzek9MeDV1dStHL3VTWVFLClNrZ1h4anZsS2ZkWHYyT1ZhRHZFWkRaMzM5MEdsWEFoZVFvOG1US24wQmRhU2dINUdsZytVbFA0OVFGT1ZXbTYKY0hFOEo4NXhrWVR6N1NZcVVxbXRmNklrU0sybzNLb2FCek81UndQQVBmcTZ3aWVSWGtPZVJSQUNKaWJuMU44aQpmZWRBVEViSFY0azZuUVdHQkZ4c2hkOEJEQUN1VGZNQURJeEVXbWNsTkVVekJZVkhKS0FLRUJkaGo4cmIxWFNrCnVjU1pSOENuVCtGMjM5YWdLSkhJSXkzbGJ2ekp6YldsLzJVSkN5ZXBBOUVGc05yTEovdVZCVGI3R2UyUGZ0Mm4KTURITUhtaWl3bXF0TG1ucFh2M0loeHVHNkVoRFJGWElTU0o2YWU0dG8rZy9nVjZRYklQaG5SSWdoSmxGZlBKdwpSREt6ejQ0SU5wSmNwT0wyZXhLT0l1QkpxQXlvbVlFY3BkaWZXNjJVaDVkTmpENDZWellVS3RxakJRMG5GZVVOCjkxSTR5elRqSFFBOExFejZZUjYwYkljYzJHZ2JJNzhFVys3OG1QanhadlhkQ3VpR3puSGJvNlJyRlllUU5WcDQKZXNMQzRiNkM0RHNIOUs5cVRGbk8vcHZ6azNsTzdQQkZaWmtxQk96OU9vcGtCTkw3bXVPZVlJa0pHMlVCYmI3SwpLWnBXWS81N29pSml1clRuczRmaXB4cXZYR1R0UzB6QWdoTE1XUnUvQ2x3WTN5WHE0b0JaM1dNOWJObll2NUNpCnB1ZGNlZWlCd2pqZFpKZ2hkQzlZZ2NUcGFRM0tzeWFHWFc1K0R1UVpkdkFhWVJwb1Q3ZzBaS2FrTTA4UkZXVjQKeERPdnpqNVdQNURJZ29udFZ1a1lac3B1V2xFQUVRRUFBZjRIQXdMUUNseERESGlxV3Y4UWhibFRzL0VQc0hWcAphcjdqaXdGekhIOFUvVWI2Y1lOQXgzWWR0Mm1iSzkvbkgzWksvZkJVdm9STlFKaldoMG12T3ZZeWRIUGRKM1FpCjh0T1ZFYVZxaHhsTjJSVFovTEFQMU5VU00zcWlHMU9UYkd5VzNoelgwam9WWGxrYjJkS2ZoR2szVDYweUFzZnMKUUp2c0YwUFVKc0twQTQzeHp3dlFla1IzUlhtME9STS9QYkZxenBLWjF1MEQrY2V6OHR1cUVnb1k4VUYxZjFmdwp5bUJrYmphZGRQSG9HKzNuTVhjRmN6c0FQZHJCNE9vVXRPQnJPMFgzL1V5Nm5mS3E3dmlvUGxJUlZKTDdXbU1DCmlIcHVVRXl6akxZWnFCWS9RTVplM3NxcUdMVWxqL2JpRWJmVnFWMHgraERUVzkzSWU4QU1KMjBQTnBwQXhGQlEKSHlmM0NmalphN2NvTjZ0Q0FHTlJERm9OQzZPeUMzV0t1d2ZZZ2xPWWpJS3B5R2FGR0xnc0hLOVo1MEFBckxhcApMMDJseExGRGk3QU9mbm9IdWFCaU9OM0MwQ1FoUEgxZnNsQlp3OGdsY1doNVhlOHFFcEY3UHg1Mm4veFlRc1dxCkxvTEdZd0VrbXZyQmpzR2tvd1JQR3FscTdPbzIvK3VWMGpxYzk3RWRQalhCcGNGOXA3Znp0M2RkL05RMEk5K3YKUHBab3paM3VwbGNPSGRiS1gyaWRYTmlCWEEvMEZhc3hDNWI1M1BSdi90SDhTRGx0Q2xPSTFXQU5ET3ROaDJpagozcjYzQStlY2VVR3Ewbmd0V2w4YjFvSGlmVTBxcnN1WEN3QWZjU3Q4UVBJOEdFL3NFaFR2OFlNdkYyTm95TDFHCmZZUWNuUmczalh4TmYvV2dzTm8wU3FUUkRYdCtQNGhZYnc5NGR4UU5EV2ZWTm9KSk4yTjRrdVZLcWhqSldoblYKOXF3dHpIeUFSQ0YvVno2NS9pOUVzaWpyYjNsWUxReXZ3a2JWQUgwYStVZUxMVlc0ZGlaSSsva05YMk9JTThBSwo0c0o4NDh0aUlqNFRNYXQ1MEtVRU5YRnJCcXMwOEJWdktocEUzc0tEK1V2dm9KRzhxN2taNVVjQWdjcHF6bjZqCmwzQVFKSjVOcHNjOFBMbkxlYWZJbGwwaFByU005NnE4NjJnTXZ3VzFIcS9GL21BalFsTGxpZWVYeFR0Si8rNWQKQld1bkFCcmdBQ2V6bStwaEZaMndLLzlYTVNJZ28venJ4WVdVUFkwYTIwT1Rtc1BIdVd4QnhSRXRFemJTZkJtYgozSUZQbVRrbmhGNzZiY3hkNzRqU3l1U29XTDNyb2tSWEZWMjhPcnVvVzNCRDVTZ1lEVW4rOU1pYkNCcWxnT3pBClhSL3BKUW9NT0x4VXoxVkRGbTdORmRxeGdqVFE3YzVtdnkxMWMzUW1HR1g1V21icVh4OEVJZzB5cGlSQlBQa24KNmNvWlY2T3VkbUtENXJJcUdHYmpJWUpNeTdTSGJQLzQwRzZqQytzeUVMSGNWTWFYckNrV1c4aXBYbTdRVlNkVwo3L2J1bHk1QTZiUnJJUUFPY0hFbE44VFdnc256eVFhNEQvK0lUYTdvbFlKenRUcmY3bHQ2ZU1jM1hGUmkydUEvCkovaG5DcDJINXVnbzNTMFVocmI4UWliVkVwamswNitnK3FLQTdGcUpiN2M5dktGVU9pcU43N3Y2SkhVcVNnTTYKODJ2ZFlLQVNnTnFFUWkvNitJVldpS08wV250b0FwQzVvelJYaUVXdnovMEZWNGtCdkFRWUFRb0FKaFloQkU1dwp1N0VpR1JDVElJTEs4cmhtcE1GbkRobDNCUUpjYklYZkFoc01CUWtEd21jQUFBb0pFTGhtcE1GbkRobDNiaDRNCkFNQ2RiMFdsOTR6NUlLR2tIUjVQUE1OREJhVUVGNVZxa2luRk1IL0x1K1lCWk83Z1Zkdk14MVFGSkp6MnF6WGcKMnpURFV3SHJRVGpMd0gyZGFiNXB5SHdvK0RHRVZjVHE2N2YvVmVoMXEvS0pTWjlUN0lCS2k0RWNQZUxSZENnWApkaVZJSlp0UGZtTDZxOFJaUTNqU0ZtMHFYSDEzQW8zaFM3RzRUc0dMMlZ2Mi9MMThnYjBpVjRZY0lFY1docGdCClY4VTlBS2Z1ak5TL3REekdRdm5QSG05eGpjVE4rTnpLOFdJMXB1Y2JiWFRFcjhGcmJnOCt6cXNtVjZLYk5sUmQKK3Z2ekNzZ0pBcFp3ZUVpV1BScjdmYnB3LzluM0xqMkFaQjFRTXB2UjA4N2ZqWkZDNVdCYTJJWjQ5d25TZXVMeAoydFZRN0dkV0NkZHBCU0gvUU9jMnB5Z1JzbGFHR3UzT1FyY1lWSWJPR0pTbnVYbWlzMGgyQ0x0Q3lxMnBZNTJvCmlncFVyNmNxR3FZb1QyV3VZY0wrcHhwYTUzSXhJQ2lFaXpINzRvMzYvd2plZWJZbUhSb3pYSnluNWVsYWhlZGUKRGVHM3lZdFlsWGwrOHJSejU3dHZ6Q0Y1Z0tPT1JNcW9FYUk3eXMydnhIWU8yZnZ1R2hqa1hub25XalRjZ2ZpYwp0Zz09Cj12S3lICi0tLS0tRU5EIFBHUCBQUklWQVRFIEtFWSBCTE9DSy0tLS0tCg==
# GPG_OWNERTRUST=IyBMaXN0IG9mIGFzc2lnbmVkIHRydXN0dmFsdWVzLCBjcmVhdGVkIFR1ZSBGZWIgMTkgMjM6NDc6MDcgMjAxOSBTVEQKIyAoVXNlICJncGcgLS1pbXBvcnQtb3duZXJ0cnVzdCIgdG8gcmVzdG9yZSB0aGVtKQo0RTcwQkJCMTIyMTkxMDkzMjA4MkNBRjJCODY2QTRDMTY3MEUxOTc3OjY6Cg==
install:
    - echo $GPG_SECRET_KEYS | base64 --decode | $GPG_EXECUTABLE --import
    - echo $GPG_OWNERTRUST | base64 --decode | $GPG_EXECUTABLE --import-ownertrust

## Build and release to maven central  
script: 
    mvn --settings .travis-maven-settings.xml clean compile package deploy -DskipTests=true -B -U
    
cache:
    directories:
        - ~/.m2/repository
        
deploy:
  provider: heroku
  api_key: $HEROKU_API_KEY        
